    4   !  *************************************************************    8   !  **                                                         **   16   !  **                   TAPE BACKUP PROGRAM                   **   20   !  **         **Version 3.0 mcm including PC upload**         **   22   !  **                      File "BAKAL3"                      **   24   !  **                                                         **   28   !  **                       * * * * *                         **   32   !  **                                                         **   36   !  **          COPYRIGHT (c) 1984 by TEKTRONIX, INC.          **   40   !  **                   ALL RIGHTS RESERVED                   **   44   !  **                                                         **   48   !  **                       * * * * *                         **   52   !  **                                                         **   56   !  **   This  software may not be  copied, in  whole or in    **   60   !  **   part, without written permission of Tektronix, Inc.,  **   64   !  **   except for back-up and  archive  purposes.  Removal   **   68   !  **   of this Copyright and Disclaimer  statement will be   **   72   !  **   violation of the Copyright.                           **   76   !  **                                                         **   80   !  **                                                         **   84   !  *************************************************************  100   !  110   !  120   !  This program will read in a master tape completely into memory.  130   !  The user will then be requested to place blank or formated tapes  140   !  into the drive and the master copy will be duplicated.  150     Delete var all  160     Compress  165     Integer dat(256)  167     DIM line$ to 80  170     Memsize=ask("memory",all)  180     Elements=int(memsize/256)-32  190     Dim file$(elements) to 256,direct$ to 1024,record$ to 256  200     Dim volume$ to 15,serial$ to 8,mrec1$ to 256,drec1$ to 256  205     Dim text$ to 20,temp$ to 20,c$ to 1,hex$ to 3  210     Set upcase 0 ! compare all ASCII  220   !----- Start of duplication process -----  230     Print using "=70a":"TAPE BACKUP PROGRAM"  240     Print using "//=70a":"COPYRIGHT (c) 1984 by TEKTRONIX, INC."  250     Print using "=70a":"ALL RIGHTS RESERVED"  260     Input prompt "   

Enter Time DD-MON-YY HH:MM ":time$  270     Set time time$  280 Begin:     input prompt "Place master tape in the tape drive and press <RETURN> :":a$  290   !----- Read in tape directory -----  300     Set sysdev "tape:"  310     Open #1:"TAPE(PHY=YES):"  320     Rbyte #1:1,mrec1$  330   ! Seg$ out the serial# (not time) field from the first record in the master.  340     Serial$=seg$(mrec1$,41,8)  350     Volume$=ask$("volume")  360     For position=2 to 4  370       Rbyte #1:position,record$  380       Direct$=direct$&record$  390       Next position  400   !----- Find last record used on the tape -----  410     Records=0  420     For i=1 to 48  430       Rec=(asc(seg$(direct$,((i-1)*16)+8,1))*256)+asc(seg$(direct$,((i-1)*16)+7,1))  440       Num=(asc(seg$(direct$,((i-1)*16)+10,1))*256)+asc(seg$(direct$,((i-1)*16)+9,1))  450       If rec<>0 then records=rec+num  460       If rec=0 then exit to endfind  470       Next i  480 Endfind:     if records-4>elements then goto moremem  490   !----- Read in all the data records from the master tape -----  500     For position=5 to records  510       Rbyte #1:position,file$(position-4)  520       Next position  530     Close 1  540     On error(1000) then call trapout  550   !----- Duplicate the master tape -----  560 Duplicat:     print  570     Input prompt "Place a tape in the tape drive and press <RETURN> :":a$  580 Copyit:     format volume$  590   ! Put in serial# (not time) field read from master with rep$ function  600     Open #1:"TAPE(PHY=YES):"  610     Rbyte #1:1,drec1$  620     Rep$(drec1$,41,8)=serial$  630     Wbyte #1:1,drec1$  640     For position=2 to 4  650       Record$=seg$(direct$,((position-2)*256)+1,256)  660       Wbyte #1:position,record$  670       Rbyte #1:position,v_rec$  680       If v_rec$<>record$ then call verif_er(position)  690       Next position  700     For position=5 to records  710       Wbyte #1:position,file$(position-4)  720       Next position  730     For position=5 to records  731       Rbyte #1:position,v_rec$  732       If v_rec$<>file$(position-4) then call verif_er(position)  733       Next position  734     Close 1  735     Input prompt "Upload tape records to PC? (<y> or <RETURN>):":ans$  736     If ans$="" then goto 780  738     Print #"frtp:":"Directory Uploaded"  740     Dir "(long=yes)"  742     Print "
Tektronix 4041 Tape upload"  744     Print "
Address			DATA"  746     Print "          0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   Text Characters"  748     Record$=mrec1$  750     Position=1  752     Call pri_rec(record$,position)  754     For position=2 to 4  756       Record$=seg$(direct$,((position-2)*256)+1,256)  758       Call pri_rec(record$,position)  760       Next position  762     For position=5 to records  764       Record$=file$(position-4)  766       Call pri_rec(record$,position)  768       Next position  770     Print "
Tape record upload is Done."  775     Print #"frtp:":"Tape is Uploaded!"  780     Input prompt "

Copy completed.  Do you wish another copy? <y> or <RETURN> to exit. ":ans$  790     If ans$="" then goto 850  800     If ans$<>"y" then goto 780  810     Goto duplicat  820 Moremem:     close 1  830     Print  840     Print "Tape records exceed the amount of memory for copy."  850     End  900 Sub verif_er(var rec)  910     Print " Verify read-back error at record # ";rec  920     REM Print #"prin:":"Read Error REC# ";rec  930     Print #"frtp:":"Read Error REC# ";rec  940     Print "
 Aborting Duplication

"  950     Close 1  960     Trap  970     End 1000 Sub trapout ! user error trapout to line duplicat 1010     Branch duplicat 1020     End 1100 Sub pri_rec(var r$,p) 1102     Integer j,r,c1,m,n,p 1105     Print "Record ";p 1110     For j=0 to 15 1115     Line$="" 1120       Text$="   " 1130       C$=chr$(j+48+(j>9)*7) 1140       Line$=line$&c$&"       " 1150       For r=1 to 16 1170         C$=seg$(r$,j*16+r,1) 1180         C1=asc(c$) 1190         M=int(c1/16) 1200         N=c1-m*16 1210         If m<10 then goto 1230 1220         M=m+7 1230         If n<10 then goto 1250 1240         N=n+7 1250         Hex$=" "&chr$(m+48)&chr$(n+48) 1260         If c1<32 or c1>127 then goto 1290 1270         Text$=text$&c$ 1280         Goto 1300 1290         Text$=text$&"." 1300         Line$=line$&hex$ 1310         Next r 1315       Line$=line$&text$ 1318       Print line$ 1330       Next j 1337     Print #"frtp:":"Record: ";p;" Uploaded" 1340     Return 1350     End