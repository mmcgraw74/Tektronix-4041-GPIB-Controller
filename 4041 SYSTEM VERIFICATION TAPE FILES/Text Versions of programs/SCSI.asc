*  100 Sub scsi
  105   !  See "TSCSI" for commented version.  May not run on 32K
  110     On abort then call sc_abrt
  120     Print "SCSI SWITCH TEST"
  130     Call swtchtst
  140     If not(proced("TARGET AVAILABLE?")) then goto sc_done
  150     Call datinout
  170 Sc_done:     print "SCSI TEST DONE"
  190     Delete var a,b,c
  200     Return
  210     End
  300 Sub swtchtst local start,loop,sw_chk,ender,myad,syad,syun
  380     Integer myad,syad,syun,a,b,c
  400 Start:     print "set SCSI switches to 0"
  450 Loop:     for i=1 to 20
  460       Wait 1
  470       Call sw_get
  480       If a+b+c=0 then goto sw_chk
  490       Next i
  500     If not(proced("^GDONE YET?")) then goto loop
  510     Print #"prin:":"The switches show"
  520     Print #"prin:" using "9b":64*c+8*b+a
  530     Goto ender
  600 Sw_chk:     print "set SCSI switches to 1 singly"
  610     Myad=0
  620     Syad=0
  630     Syun=0
  640     Call sw_get
  650     If a=myad and b=syad and c=syun then goto 640
  660     Print #"prin:" using "9b":64*c+8*b+a
  670     Myad=a
  680     Syad=b
  690     Syun=c
  700     If a=7 and b=7 and c=7 then goto ender
  710     Goto 640
  720 Ender:     return
  730     End
  800 Sub sw_get local full$
  810     Dim full$ to 512
  820     Open #2:"disk(phy=yes):"
  830     Full$=ask$("lu",2)
  840     A=valc(full$,pos(full$,"ADR",1)) mod 10
  850     B=valc(full$,pos(full$,"DEV",1))
  860     C=valc(full$,pos(full$,"UNI",1))
  870     Close 2
  880     Return
  890     End
 1000 Sub datinout local diskdir$,sector,oldata$,newdata$,compare$,data_ok,i,exists,disk_err,type$,err_num,j
 1010     Dim diskdir$ to 72,oldata$ to 512,newdata$ to 512,compare$ to 512,type$ to 3
 1020     J=proced("SET SCSI SWITCHES")
 1030     Call sw_get
 1040     If not(proced("MY ADDR = "&str$(a)&"? ")) then goto 1020
 1050     If not(proced("DEV ADD = "&str$(b)&"? ")) then goto 1020
 1060     If not(proced("DEV UNI = "&str$(c)&"? ")) then goto 1020
 1070     Integer sector,i,err_num
 1080     Type$="new"
 1090     On error(1200 to 1456) then gosub disk_err
 1100     On error(1204) then gosub exists
 1110     Open #2:"disk:diagnostics(open="&type$&",size=1)",diskdir$
 1120     Sector=val(seg$(diskdir$,36,72))
 1130     Newdata$="U"
 1140     For i=1 to 9
 1150       Newdata$=newdata$&newdata$
 1160       Next i
 1170     Compare$=newdata$
 1180     Open #2:"disk(phy=yes):"
 1190     Rbyte #2:sector,oldata$ !Read in original data
 1200     Wbyte #2:sector,newdata$ !Write out pattern
 1210     Rbyte #2:sector,newdata$ !Read back in pattern
 1220     Wbyte #2:sector,oldata$ !Write out original pattern
 1230     Close 2
 1240     If type$="new" then delete file "disk:diagnostics"
 1250     If newdata$=compare$ then goto data_ok
 1260     Print "Data miscompare on disk"
 1270 Data_ok:     return
 1280 Disk_err:     err_num=val(seg$(ask$("error"),1,10))
 1290     Print "Disk error # ";err_num;" While testing read/write"
 1300     Branch data_ok
 1310 Exists:     type$="old"
 1320     Branch 1110
 1330     End
 1400 Sub sc_abrt
 1410     Branch sc_done
 1420     End
