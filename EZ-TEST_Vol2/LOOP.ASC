    4   !  *************************************************************    8   !  **                                                         **   12   !  **                 TEK EZ-TEST VOLUME II                   **   16   !  **                  DATA FILE PROCESSOR                    **   20   !  **                 LOOP GRAPHICS PLOTTER                   **   24   !  **              4105 COLOR GRAPHIC TERMINAL                **   28   !  **                      Version 5.0                        **   32   !  **                                                         **   36   !  **                       * * * * *                         **   40   !  **                                                         **   44   !  **          COPYRIGHT (c) 1984 by TEKTRONIX, INC.          **   48   !  **                   ALL RIGHTS RESERVED                   **   52   !  **                                                         **   56   !  **                       * * * * *                         **   60   !  **                                                         **   64   !  **   This  software may not be  copied, in  whole or in    **   68   !  **   part, without written permission of Tektronix, Inc.,  **   72   !  **   except for back-up and  archive  purposes.  Removal   **   76   !  **   of this Copyright and Disclaimer  statement will be   **   80   !  **   violation of the Copyright.                           **   84   !  **                                                         **   92   !  *************************************************************  100 Begin:     init  105     Delete var all  110     Init var all  115     Compress  120     On abort then call abormenu  125     On error(842) then call mederr1 !storage media not in place  130     On error(1207) then call mederr1  135     On error(843) then call mederr2 !storage media is write protected  140     On error(850) then call mederr3 !file already exists  145     On error(1204) then call mederr3  150     On error(851) then call mederr4 !storage media is full  155     On error(1202) then call mederr4  160     On error(853) then call mederr5 !file doesn't exist  165     On error(1205) then call mederr5  170     On error(855) then call mederr6 !eof occurred on storage media  175     On error(1206) then call mederr6  180     On error(114) then call compr !  Compress fragmented memory  185     On error(110) then call compr  190     Integer mecount,stp  195     Long rdata,fntest  200     Dim me_data$(ask("memory",all)/80) to 58,metemp$ to 80 !  Leave some memory  205     Integer baud,termid  210     Call autobaud(baud,termid)  215     If fail=1 then print "This is not a 4100 series terminal." else goto 225  220     Goto 515  225     Call initerm(baud,termid)  230     Pagew$=""&chr$(12)  235     Pagem$="LZ"  240     Print "TG140R<00TG141G8C2F4TG142P4A>F4TG1430C2F4TG144G8C2F4TG145I6C<F4TG146P4C2F4TG147E:E:F4TF42O0C2F4LI100"  245     Print pagew$&pagem$  250     Open #700:"comm:"  255     If pos(ask$("driver"),"comm1",1) then open #800:"comm1:" else open #800:"comm0:"  260     Print using "/=70a":"TEK EZ-TEST VOLUME II"  265     Print using "=70a":"DATA FILE PROCESSOR"  270     Print using "//=70a":"COPYRIGHT (c) 1984 by TEKTRONIX, INC."  275     Print using "=70a":"ALL RIGHTS RESERVED"  280     Wait 2  285 Prinmen:     print "
  
You may select one of the following:"  290     Print "
     1. Retrieve Data"  295     Print "     2. Save Data"  300     Print "     3. Plot loops"  305     Print "     4. Exit program"  310 Inprompt:     input prompt "
Enter choice by menu number : ":select$  315     If pos("1234",select$,1)=0 or select$="" then print "
Invalid selection. Please try again." else goto valnum  320     Goto inprompt  325 Valnum:     gosub val(select$) of get_data,stor_dat,plotfn  330     If select$="4" then goto done  335     Goto prinmen  340 Get_data:     newf=0 ! retrieve test data file  . . . reset new file flag  345     Print "
Specify file name for test data retrieval . . .

"  350     Call respond  355     If filen$="" then print pagem$ else goto 365 !  no file specified so quit  360     Goto 455 !  get out  365     Open #81:filen$  370     If newf then print "
File not found! " else goto 385  375     Close 81 ! kill temporary lu  380     Goto get_data !  try again  385     Input prompt "
Output device? (S=Screen, L=Line printer or M=Memory) :":outdev$  390     If outdev$<>"L" then goto 410  395     Call x_printr !  set up comm parameters  400     Copy filen$ to ask$("lu",800) !  copy file data to comm1 printer  405     Goto 455  410     If outdev$<>"S" then goto 430  415     Print pagem$  420     Copy filen$ to ask$("console") !  copy file data to console  425     Goto 455  430     If outdev$<>"M" then goto 445  435     Call fillmed !put data into me_data$  440     Goto 455  445     Print "
WHAT !"  450     Goto 385 !  try again  455     Close 81 !  kill the temporary lu  460     Return  465 Stor_dat:     call output  470     Call storset  475     Call stordata  480     Return  485 Plotfn:     call graphfn  490     Print pagem$  495     Print "RW `` @8so_LBC1"  500     Init var path$  505     Return  510 Done:     call initerm(baud,termid)  515     Print "Thank you"  520     End  600 Sub output !   DEFINE DEVICE TO LOG MEASUREMENT RESULTS  605     Print "Select a device for output."  610     Input prompt "
S=Screen, P=4041 printer, T=4041 tape, L=Line printer, or RETURN for none: ":outdata$  615     If outdata$="" then return  620     Outdata$=seg$(outdata$,1,1)  625     If pos("SsPpLlTt",outdata$,1) then return else goto 610  630     End  700 Sub respond !         ESTABLISH TAPE I/O  705     If newf then print pagem$&"
Selected file ("&filen$&") not found.
"  710     Dir "(LONG=YES)"  715     Input prompt "
Enter file name or RETURN for none: ":filen$  720     Fsav$=seg$(filen$,1,6) ! GET FILENAME ONLY FOR FSAV$  725     Init var newf  730     Return  735     End  800 Sub save_it local redif,nofi !   SAVE MEASURMENT DATA ON TAPE  805     Filesize=80*(mecount+14)  810     Tape$="(OPEN=NEW,SIZE="&str$(filesize)&")"  815     Call respond  820     If filen$="" then goto nofi  825     Ftype$="REPLACE"  830     Open #100:filen$ ! CHECK IF FILE EXIST  835     If ftype$="NEW" then goto redif  840     Print "
Warning file already exist!"  845     Print "
Do you wish to replace old file? (y/n): ";  850     Call y_nanswr  855     If pos(answer$,"N",1) then return  860 Redif:     rep$(tape$,7,3)="REPLACE"  865     Filed$=filen$&tape$  870     Return  875 Nofi:     outdata$="" ! set device to none if no file named  880     Return  885     End  900 Sub x_printr local phypar$,phy$,logpar$ !SET UP STREAM SPECS FOR EXTERNAL PRINTER  905     Dim phypar$ to 300,logpar$ to 300,phy$ to 300,com$ to 300  910     If not(pos(ask$("driver"),"COMM1",1)) then print "

Optional comm driver (COMM1) not present in this system!" else goto 930  915     Com$="COMM0:"  920     Input prompt "

Press <RETURN> to continue":ret$  925     Return  930     Phypar$=seg$(ask$("lu",800),pos(ask$("lu",800),"(",1)+1,pos(ask$("lu",800),"ech",1)-8)  935     Logpar$=seg$(ask$("lu",800),pos(ask$("lu",800),"ech",1),pos(ask$("lu",800),"):",1)-len(phypar$)-8)  940     Print using "2Lfa//fa":"COMM1 PHYSICAL PARAMETERS ARE:",phypar$  945     Print "
Enter physical parameters for COMM1 or <RETURN> for no change: "  950     Input prompt "
  e.g. baud=1200,fla=bid,typ=2000 (see 4041 Ref. Guide)        %!1[2A%!0":phy$  955     If phy$="" then phy$=phypar$  960     Typ$="TYP=3000"  965     Typos=pos(phy$,"TYP",1) !replace typahead buffer num with a calculated one  970     If typos=0 then typ$=","&typ$  975     If typos=0 then typos=len(phy$)+1  980     Typdel=pos(phy$,",",typos)-1  985     If typdel<=0 then typdel=len(phy$)+1  990     Rep$(phy$,typos,typdel-typos+1)=typ$  995     Set driver "COMM1("&phy$&"):" 1000     Print using "4Lfa//fa ":"COMM1 LOGICAL PARAMETERS ARE:",logpar$ 1005     Print "

Enter logical parameters for COMM1 or <RETURN> for no change:" 1010     Input prompt "
  e.g. cr=cr,con=yes  (see 4041 Ref. Guide)                   %!1[2A%!0":com$ 1015     If com$="" then com$=logpar$ 1020     Com$="COMM1("&com$&"):" 1025     Close 800 1030     Open #800:com$ 1035     Return 1040     End 1100 Sub y_nanswr ! CHECK FOR VALID Y/N RESPONSES TO AN INPUT 1105     Ty=val(seg$(ask$("console"),pos(ask$("console"),"#TY",1)+4,5)) 1110     If ty<>0 then call clr_bufr 1115     Input #700:answer$ 1120     If answer$<>"Y" and answer$<>"N" then goto 1105 1125     Return 1130     End 1200 Sub clr_bufr ! SWEEP OUT THE COMM BUFFER CR'S 1205     Ty=val(seg$(ask$("console"),pos(ask$("console"),"#TY",1)+4,5)) 1210     If ty=0 then return ! don't sweep buffer if cleared 1215     Select "COMM0:" 1220     For xx=1 to ty 1225       Rbyte answer$ 1230       Next xx 1235     Return 1240     End 1300 Sub stordata local n_dev,t_ck,l_ck,p_ck,s_ck ! store test data to appropriate user device 1305     Data_lu=100 1310     If mecount=0 then print "
NO DATA ! " else goto n_dev 1315     Return 1320 N_dev:     if outdata$="" then return else goto t_ck 1325     Wait 4 1330     Return 1335 T_ck:     if outdata$="T" then open #100:filed$ else goto p_ck 1340     Call record 1345     Close 100 1350     Return 1355 P_ck:     if outdata$="P" then open #100:"PRIN(IND=0):" else goto l_ck 1360     Call precord 1365     Close 100 1370     Return 1375 L_ck:     if outdata$="L" then open #100:com$ else goto s_ck 1380     Call record 1385     If val(com$) then print #com$:chr$(12) 1390     Close 100 1395     Return 1400 S_ck:     if outdata$="S" then data_lu=700 1405     Call record 1410     Input prompt "Press RETURN when ready to continue.":answer$ 1415     Return 1420     End 1500 Sub storset local t_ck,l_ck !set up for data storage 1505     If outdata$="T" then goto t_ck 1510     If outdata$="L" then goto l_ck 1515     Return 1520 T_ck:     call save_it 1525     Return 1530 L_ck:     call x_printr 1535     Return 1540     End 1600 Function linein$ local line$ !get info from past the ":" 1605     Dim line$ to 80 1610     Input #81:line$ 1615     Linein$=trim$(seg$(line$,pos(line$,":",1)+2,len(line$)-pos(line$,":",1)+2)) 1620     Return 1625     End 1700 Sub record local loopmea,fld1$,fld2$,fld3$,fld4$,fld5$,metemp$ ! OUTPUT MEASUREMENT RESULTS 1705     If mecount=0 then return 1710     If pos(ask$("lu",data_lu),"COMM0",1) then print pagem$ 1715     Image 25TFA25A 1720     Print #data_lu using 1715:"TEST NAME: ",tnam$ 1725     Print #data_lu using 1715:"OPERATOR: ",opname$ 1730     Print #data_lu using 1715:"ID: ",t_dev$ 1735     Print #data_lu using 1715:"DATE: ",seg$(date$,1,9) 1740     Print #data_lu using "2L78('-')": 1745     For i=1 to mecount 1750       Metemp$=me_data$(i) 1755       Call parse(metemp$,fld1$,fld2$,fld3$,fld4$,fld5$) 1760       Print #data_lu using "<22a30t'|'32t26a":fld1$,fld2$ 1765       If pos(fld5$,"PAS",1) or pos(fld5$,"FAI",1) then print #data_lu using "4t'Low '<22a30t'| Hi '<22a56t'|'4x4a":fld3$,fld4$,fld5$ 1770       Next i 1775     Print #data_lu using "78('-')2/": 1780     Print #data_lu using "T'START TIME: '8A4X'COMPLETION TIME: '8A4X'TOTAL TIME: '7.2G2L":start$,finish$,finish-start 1785     Return 1790     End 1800 Sub parse(temp$ var fld1$,fld2$,fld3$,fld4$,fld5$) 1805     Image 20a16a9a9a4a 1810     Getmem buffer temp$ using 1805:fld1$,fld2$,fld3$,fld4$,fld5$ 1815     If seg$(fld1$,1,4)="Proc" then return 1820     If seg$(temp$,10,4)="ITEM" then getmem buffer fld1$ using "I":fntest else goto 1830 1825     Putmem buffer fld1$ using "4tk":fntest 1830     If pos(fld2$,"---",1) or pos(fld2$,"File",1) then goto 1855 1835     If pos(fld2$,"Loop",1) then goto 1850 else getmem buffer fld2$ using "I5a":rdata,unit$ 1840     Putmem buffer fld2$ using "kx5a":rdata,unit$ 1845     Goto 1860 1850     Rep$(fld2$,5,0)="on: " 1855     Rep$(fld2$,5,0)=" " 1860     If pos(fld3$,"---",1) then goto 1870 else getmem buffer fld3$ using "I":low 1865     Putmem buffer fld3$ using "k":low 1870     If pos(fld4$,"---",1) then goto 1880 else getmem buffer fld4$ using "I":up 1875     Putmem buffer fld4$ using "k":up 1880     Return 1885     End 1900 Sub precord local ploopmea ! FORMAT OUTPUT FOR FRONT PANEL PRINTER 1905     If mecount=0 then return 1910     Image /'STIMULUS'/=20A 1915     Image 'LO LIMIT:'/=20A/'HI LIMIT:'/=20A/'PASS/FAIL: '>8A 1920     Print #100 using "'TEST NAME:'FA2/'OPERATOR:'FA2/'ID:'FA2/'DATE:'FA/20('-')/20('-')":tnam$,opname$,t_dev$,seg$(ask$("time"),1,9) 1925     For i=1 to mecount 1930       Metemp$=me_data$(i) 1935       Call parse(metemp$,plab$,rdata$,lolmt$,hilmt$,p_f$) 1940       If pos("P#",seg$(plab$,1,1),1) then print #100 using "/<20A":plab$ else print #100 using 1910:trim$(plab$) 1945       If pos(rdata$,"Loop",1) or pos(rdata$,"File",1) then goto 1960 1950       If pos(rdata$,"       ",1) then goto 1970 else getmem buffer rdata$ dels " ":rdata$,unit$ 1955       Print #100:"READING in: ";unit$ 1960       Print #100 using "=20A":rdata$ 1965       If pos(p_f$,"PAS",1) or pos(p_f$,"FAI",1) then print #100 using 1915:lolmt$,hilmt$,p_f$ 1970       Next i 1975     Print #100 using "/20('-')/20('-')/2l/'START TIME: '>fa/'STOP TIME:  '>fa/'TOTAL TIME:  '7.2g":start$,finish$,finish-start 1980     Print #100 using "12L": 1985     Return 1990     End 2000 Sub fillmed local line$,lpmeas,dproc,dloop,dfile,dmeas,dout,dtime,dlim,again,done,stimset$ 2005     Dim line$ to 80,stimset$ to 12 2010     Image   20A20t4A24t<12A36T>9A45T>9A54T4A 2015     Image   I9T4A20TI29T<5A36T>9A45T>9A54T4A 2020     Image   20A20tI29t<5A36T>9A45T>9A54T4A 2025     Image   36a<9A45T<9A54T4A 2030     Init var me_data$,mecount 2035     Open #81:filen$ 2040     Tnam$=linein$ 2045     Opname$=linein$ 2050     T_dev$=linein$ 2055     Date$=linein$ 2060     Start=0 2065 Again:     if eof(81) then goto done ! now at the data 2070     Input #81:line$ 2075     If seg$(line$,1,4)="Proc" then goto dproc 2080     If pos(line$,"Loop",20) then goto dloop 2085     If pos(line$,"File",20) then goto dfile 2090     If seg$(line$,1,1)="#" then goto dmeas 2095     If seg$(line$,1,2)="  " then goto lpmeas ! first chars are blank 2100     If pos(line$,"START TIME:",1) then goto dtime 2105     Goto again ! not data line 2110 Lpmeas:     if seg$(line$,5,3)="Low" and seg$(line$,33,2)="Hi" then goto dlim !check for limits 2115     Fntest=val(line$) 2120     Rdata=valc(line$,pos(line$,"|",1)+1) 2125     Unit$=seg$(line$,ask("chpos")+1,5) 2130     Putmem buffer line$ using 2015:fntest,"ITEM",rdata,unit$,"---   ","---   ","---" 2135     Goto dout 2140 Dlim:     if pos(line$,"---",1) then goto 2165 else low=valc(line$,pos(line$,"Low",1)) 2145     Putmem buffer low$ using "I":low 2150     Up=valc(line$,pos(line$,"Hi",1)) 2155     Putmem buffer up$ using "I":up 2160     Goto 2175 2165     Low$="---   " 2170     Up$="---   " 2175     P_f$=seg$(line$,posn(line$,"|",1,2)+5,4) 2180     Line$=seg$(me_data$(mecount),1,36) 2185     Putmem buffer line$ using 2025:line$,low$,up$,p_f$ 2190     Me_data$(mecount)=line$ 2195     Goto again 2200 Dproc:     putmem buffer line$ using "17a56t":seg$(line$,1,17) ! line is link title 2205     Goto dout 2210 Dloop:     getmem buffer line$ using "20a21x10a":label$,stimset$ ! line is loop title 2215     Putmem buffer line$ using 2010:label$,"Loop",stimset$,"---   ","---   ","---" 2220     Goto dout 2225 Dfile:     getmem buffer line$ using "20a18x14a":label$,stimset$ ! for 7D20 or block file 2230     Putmem buffer line$ using 2010:label$,"File",stimset$,"---   ","---   ","---" 2235     Goto dout 2240 Dmeas:     getmem buffer line$ using "20a":label$ ! line is single measurement 2245     Rdata=valc(line$,pos(line$,"|",1)) 2250     Unit$=seg$(line$,ask("chpos")+1,5) 2255     Putmem buffer line$ using 2020:label$,rdata,unit$,"---   ","---   ","---" 2260 Dout:     mecount=mecount+1 2265     Me_data$(mecount)=line$ 2270     Goto again 2275 Dtime:     line$=seg$(line$,pos(line$,"START",1),80) 2280     Getmem buffer line$ using "12x8a21x8a15x9a":start$,finish$,fin$ 2285     Finish=val(fin$) 2290     Goto again 2295 Done:     close 81 !done with read in 2300     Return 2305     End 2400 Sub graphfn local x1,x2,size,dec,inc,count,ylo,yhi !  graph loop test data 2405     On error(80) then gosub err80 2410     Integer x1,x2,size 2415     Print pagew$ 2420     GINIT 700,4113,1 2425     Call fnmenu(x1,x2) !find loop to graph 2430     If x2=0 then goto 2630 2435     If x2=1 then size=1 else size=x2-x1 2440     Long xplt(size),yplt(size) 2445     For point=1 to size 2450       Metemp$=me_data$(x1+point) 2455       Getmem buffer metemp$ using "I11aI":xplt(point),fld1$,yplt(point) 2460       Next point 2465     Print "LI700" 2470     Print pagem$ 2475     Print using "2L=75A":"PLOTTING "&grlab$ 2480     Rcall "xlog",0 ! set up for linear plot 2485     If size<3 then goto 2515 2490     If (xplt(1)-xplt(2))<>(xplt(2)-xplt(3)) and (xplt(1) min xplt(size))>0 then rcall "xlog",1 ! Don't plot log with minus values 2495     Rcall "ask xlog",xtype 2500     Ele1=xplt(1) 2505     If xtype then rcall "XRANGE",10^int(lgt(ele1)),xplt(size) else XRANGE 2510     If xtype then rcall "xtic",int(lgt(xplt(1))),1 else XTIC 2515     LINESTYL 0 2520     SYMBOL 2,1 2525     XGRID 1 2530     YGRID 1 2535     Print pagew$ 2540     COLOR 1 2545     XYPLOT xplt,yplt 2550     COLOR 3 2555     SYMBOL 0,1 2560     LINESTYL 1 2565     XYADD xplt,yplt 2570     COLOR 5 2575     Rcall "ask viewport",xx1,xx2,yy1,yy2 2580     Rcall "ask window",x1,x2,y1,y2 2585     If xtype then gosub ticmark 2590     VIEWPORT xx1,xx2,yy1,yy2 2595     WINDOW x1,x2,y1,y2 2600     TITLE grlab$ 2605     SUBTITLE date$ 2610     MOVE 65,15 2615     GTEXT "STIMULUS: "&stimset$ 2620     YTITLE "MEASUREMENT : "&grunit$ 2625     Goto 2425 2630     COLOR 1 2635     Print "LI100"&pagew$&pagem$&"LLA>" 2640     Delete var xplt,yplt 2645     Pkhead$="" 2650     Return 2655 Ticmark:     rcall "ask yrange",ylo,yhi,autoflag 2660     Rcall "ask plot",lxw,hxw,lyw,hyw,lxv,hxv,lyv,hyv 2665     WINDOW lxw,hxw,lyw,hyw 2670     VIEWPORT lxv,hxv,lyv,hyv 2675     LINESTYL 2 2680     For dec=int(lgt(xplt(1))) to int(lgt(xplt(size)))+1 2685       Inc=10^int(dec) 2690       For count=10^dec+inc to 10^(dec+1)-inc step inc 2695         MOVE lgt(count),ylo 2700         DRAW lgt(count),yhi 2705         Next count 2710       Next dec 2715     LINESTYL 1 2720     Return 2725 Err80:     input prompt "Unable to plot loop"&chr$(13)&"Selected loop has a value that is outside the range of the graph routine."&chr$(13)&"Press <RETURN> to continue.":ans$ 2730     Branch 2415 2735     End 2800 Sub fnmenu(var x1,x2) local fllab$,flpnt,i,j,j1,levnam$,found,getchce 2805     Integer f,i,j,j1,x1,x2 2810     X1=1 2815     X2=mecount 2820     J=0 2825     For i=1 to mecount !find the number of procedures 2830       If seg$(me_data$(i),1,4)="Proc" then j=j+1 2835       Next i 2840     If j=0 then goto 2935 2845     Dim fllab$(j) to 15 2850     Integer flpnt(j+1) 2855     J=1 2860     Flpnt(1)=1 2865     For i=1 to mecount 2870       If seg$(me_data$(i),1,4)<>"Proc" then goto 2890 2875       Fllab$(j)=seg$(me_data$(i),6,10) 2880       Flpnt(j)=i 2885       J=j+1 2890       Next i 2895     If j=1 then flpnt(j+1)=mecount else flpnt(j)=mecount 2900     F=1 2905     If j=1 then goto 2925 2910     Levnam$="File Name" 2915     Gosub getchce 2920     If f<=0 then goto nodo 2925     X1=flpnt(f) 2930     X2=flpnt(f+1) 2935     J=0 2940     For i=x1 to x2 2945       If pos(me_data$(i),"Loop",20) then j=j+1 2950       Next i 2955     If j=0 then goto nodo 2960     Dim fllab$(j) to 15 2965     Fllab$="" 2970     Integer flpnt(j+1) 2975     Flpnt=0 2980     J=1 2985     For i=x1 to x2 2990       If not(pos(me_data$(i),"Loop",20)) then goto 3030 2995       For j1=1 to j 3000         If fllab$(j1)=seg$(me_data$(i),5,15) then exit to found 3005         Next j1 3010       If j1>j then fllab$(j)=seg$(me_data$(i),5,15) 3015       J1=j 3020       J=j+1 3025 Found:       flpnt(j1)=flpnt(j1)+1 3030       Next i 3035     Levnam$="Loop Step" 3040     Gosub getchce 3045     If f<=0 then goto nodo 3050     I=flpnt(f) 3055     If i=1 then goto 3085 3060     Print "There are ";i;" occurrences of Loop ";fllab$(f) 3065     Input prompt "Which Loop do you want ":i 3070     If i<=0 then goto nodo 3075     If i>flpnt(f) then print "Invalid Selection" else goto 3085 3080     Goto 3050 3085     J1=i 3090     For j=x1 to x2 3095       If seg$(me_data$(j),5,15)=fllab$(f) and pos(me_data$(j),"Loop",20) then j1=j1-1 else goto 3105 3100       If j1=0 then exit to jstart 3105       Next j 3110 Jstart:     x1=j+1 3115     For j=x1 to x2 3120       If pos("P#",seg$(me_data$(j),1,1),1) then exit to jfinish 3125       Next j 3130 Jfinish:     x2=j-1 3135     If flpnt(f)=1 then grlab$=fllab$(f) else grlab$=trim$(fllab$(f))&" #"&str$(i) 3140     Stimset$=trim$(seg$(me_data$(x1-1),25,10)) 3145     Grunit$=seg$(me_data$(x1),30,5) 3150     X1=x1-1 3155     Return 3160 Getchce:     j=j-1 3165     For i=1 to j 3170       Print using "2d2x<16as":i,fllab$(i) 3175       Next i 3180     Print 3185     Input prompt "            Select "&levnam$&" by Number or 0 for none :":f 3190     If f>j then print "Invalid Selection" else goto 3205 3195     Wait 1 3200     Goto 3165 3205     Return 3210 Nodo:     x1=0 3215     X2=0 3220     Return 3225     End 3300 Sub abormenu 3305     Print "Process aborted." 3310     Print "LLA>" !return dialog to 30 3315     Branch prinmen 3320     End 3400 Sub mederr1 !storage media not in place 3405     Print "
Warning" 3410     Print "Storage device is not in the drive." 3415     Input prompt "Insert and press RETURN to continue.":a$ 3420     Retry 3425     End 3500 Sub mederr2 !storage media is write protected 3505     Print "
Caution" 3510     Print "Storage device is write protected." 3515     Input prompt "Change to write enable and press RETURN to continue.":a$ 3520     RETYR 3525     End 3600 Sub mederr3 !file already exists 3605     Oldfil=1 3610     Advance 3615     End 3700 Sub mederr4 local a$ !storage media is full 3705     Print "
Storage device is full" 3710     Input prompt "Change the storage media and press RETURN to contine.":a$ 3715     Branch prinmen 3720     End 3800 Sub mederr5 !file does not exist 3805     Newf=1 3810     Ftype$="new" 3815     Advance 3820     End 3900 Sub mederr6 !eof occurred on the file 3905     Ftype$="rep" 3910     Retry 3915     End 4000 Sub initerm(baud,termid) local ll$,iw$,rv$,a$,b$,i,dalin,dta 4005     Dim a$ to 300,b$ to 300 4010     S$="comm0(bau="&str$(baud)&",edi=ras):" 4015     Set driver s$ 4020     Set console s$ 4025     Open #1:"comm0:" 4030     Print #1:"NRIX0IX0" !  Sets terminal baud to 9600 4035     Set driver "comm0(bau=9600,edi=ras):" 4040     Set console "comm0:" 4045     Print #1:"LZ"&chr$(12); 4050     Print #1:"%!1[?7h" !  Set ansi mode and set autowrap 4055     Print #1:"%!0"; !  Sets terminal to TEK mode 4060     Print #1:"KC"; !  Cancel terminal operating modes 4065     Wait 0.5 4070     Print #1:"KL1" !  Locks out keyboard during set-up 4075     Iw$="IW `` @?o"&chr$(127)&"?_" 4080     Rv$="RV `` @7o"&chr$(127)&"?_" 4085     If termid=4105 then ll$="LLA>" else ll$="LLB0" !  Dalines 30 or 32 4090 Dta:     data "IH0","IM1","IA8","IJ84","IL0" 4095     Data "KE0","KL0","KW1","KYA0","KA1","KG1","KI0","KF0","KR0" 4100     Data "KS0","KT2","LBC1","LI100","LM0","LV1","MA00" 4105     Data "MB!!","MCB7C;<","MF0","MG1","ML1","MM0","MN0" 4110     Data "MP!","MQ2","MR00","MT1","MV0","NLIX0","NB1" 4115     Data "NDF4","NP0","NM0","NQR<","NF0","NC=:" 4120     Data "NT1=","NE0","NKL8","NU:","QA0","QD2","QL100","RA101" 4125     Data "RC1","RD14","RE0","RF6","RH#|w @","RI211","RJ0","RN211" 4130     Data "RQ0","RS `` @#ow$_","RU1;6","RW `` @8kn?_" 4135     Data "TC0F40","TB000","TD10","TF40000","TF410F40","TF42G8C2F4" 4140     Data "TF43O0C2F4","TF440C2F4","TF45R<C2F4","TF46C<C2F4","TF47K4C2F4" 4145     Data "TG140000","TG1410F40","TG142G8C2F4" 4150     Data "TG143O0C2F4","TG1440C2F4","TG145R<C2F4","TG146C<C2F4","TG147K4C2F4" 4155     Restore dta 4160     For i=1 to 80 4165       Read a$ 4170       Print #1:a$; 4175       Next i 4180     If termid=4105 then goto dalin 4185     Print #1:"TG148I6C2F4TG149M2C2F4TG14:P>C2F4"; !  Graphics for 4106,07,09 4190     Print #1:"TG14;T:C2F4TG14<A>C2F4TG14=E:C2F4"; 4195     Print #1:"TG14>0B10TG14?0D20"; 4200     Print rv$&"TM311"&iw$ 4205 Dalin:     print ll$ !  Set dalines 4210     Print #1:"LZ"&chr$(12)&"KL0" !  Page and unlock keyboard 4215     Close 1 4220     Return 4225     End 4300 Sub autobaud(var baud,termid) local term_id$,baud$,i,e885,nexti,found,clse 4305     Fail=0 4310     Termid=0 4315     Baud=0 4320     Dim baud$ to 4,term_id$ to 5 4325     Init var baud$,term_id$,fail,termid,baud 4330     On error(885) then gosub e885 4335     For i=1 to 12 4340       Data "9600","4800","2400","300","600","1200","1800","2000","150","134","110","75" !  4100 baudrates the 4041 is able to handle 4345       Read baud$ 4350       Set driver "comm0(iba="&baud$&"):" !  Set driver to a baud rate 4355       Open #2:"comm0(tim=2):" !  Open the channel 4360       Input #2 prompt chr$(27)&"%!0"&chr$(27)&"NU "&chr$(27)&"IQ?T":term_id$ !  Ask for terminal ID 4365       If len(term_id$)<>5 then goto nexti 4370       If pos("$ 9$ :$ ;$ =",seg$(term_id$,3,3),1)<>0 then exit to found 4375 Nexti:       next i 4380     Fail=1 4385     Goto clse 4390 E885:     advance ! Error 885 occured 4395     Return 4400 Found:     termid=asc(seg$(term_id$,5,1))+4048 4405     Baud=val(baud$) 4410 Clse:     close 2 4415     Return 4420     End 4500 Sub compr !  Compress fragmented memory 4505     Compress all 4510     Retry 4515     End